{
	"info": {
		"_postman_id": "d087a5d1-2c37-497b-aa6a-b0eecebf2455",
		"name": "Riva",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "identity",
			"item": [
				{
					"name": "accounts",
					"item": [
						{
							"name": "Create account",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e95b6fb1-c46d-419a-bf59-841c45a61e1e",
										"exec": [
											"pm.environment.set(\"account.email\", \"michalglowaczewski@gmail.com\");",
											"pm.environment.set(\"account.password\", \"Password1234\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5e9746b2-6a3c-4f77-a3f3-d6adcd174570",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"    ",
											"    var locationHeader = pm.response.headers.get(\"Location\");",
											"    var baseAddress = pm.variables.get(\"identityBaseInsecureUrl\");",
											"    var lastIndexOfResourceAddress = baseAddress.length + 14;",
											"    var accountId = locationHeader.substring(lastIndexOfResourceAddress);",
											"    pm.environment.set(\"account.id\", accountId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{account.email}}\",\n\t\"password\": \"{{account.password}}\",\n\t\"confirmPassword\": \"{{account.password}}\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a4c38f7-6120-49ad-8034-1cc854607a07",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/{{account.id}}",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"{{account.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e8d203-6396-4c6f-b4e3-56d36f01268e",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/{{account.id}}",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"{{account.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "adce8ff3-e38c-43a8-981d-15b753a7f425",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "37f8b8bc-808f-476d-b5dc-ca9b454c5bd6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"{{account.id}}\",\n\t\"roles\": [\"766FFB44-2A23-4C3E-B526-CCDA53F138F5\", \"C5CFC569-CA50-4F7A-8A94-B9B2908A15FA\"]\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/{{account.id}}",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"{{account.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fbd5769-73e9-4387-9879-53459f17f52d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts"
									],
									"query": [
										{
											"key": "sort",
											"value": "email:asc",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "email",
											"value": "",
											"disabled": true
										},
										{
											"key": "emailConfirmed",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Request account confirmation token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb3a1860-a379-4fde-917a-470248cb50f5",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6dcbd84-929e-4822-add9-d82ef0baee50",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{account.email}}\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/confirmations/tokens",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"confirmations",
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b17c1aba-fa74-4fd9-8b9f-78a5842c7315",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "42da7d30-711f-4280-8286-2f8006eb7748",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{account.email}}\",\n\t\"code\": \"\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/confirmations",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request password reset token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "34888071-64ea-4438-893e-fb0addb0d28b",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "eabe08c2-d01d-4386-8c05-a371d559b6bc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{account.email}}\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/passwords/tokens",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"passwords",
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d1dc5b9-dab7-4ab8-9895-071646f84740",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5f7e78d2-d230-4294-b533-796f7e879c60",
										"exec": [
											"pm.environment.set(\"account.password\", \"Password12345\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{account.email}}\",\n\t\"password\": \"{{account.password}}\",\n\t\"confirmPassword\": \"{{account.password}}\",\n\t\"code\": \"\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/passwords/resets",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"passwords",
										"resets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cdc12864-3862-42da-a662-5cdf4fc63e85",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "688691e4-500a-4ac9-8387-a91e6b0c97a1",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"oldPassword\": \"{{account.password}}\",\n\t\"newPassword\": \"{{account.password}}\",\n\t\"confirmNewPassword\": \"{{account.password}}\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/{{account.id}}//passwords/changes",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"{{account.id}}",
										"",
										"passwords",
										"changes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64cf4cc7-c853-4e80-8ac2-a0517a53c438",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01ed788c-9053-4d7e-882f-d54547c118b5",
										"exec": [
											"pm.environment.set(\"account.password\", \"Password1234\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"{{account.password}}\",\n\t\"confirmPassword\": \"{{account.password}}\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/accounts/{{account.id}}/passwords/assignments",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"accounts",
										"{{account.id}}",
										"passwords",
										"assignments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "Create role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1a9f588-9d92-4b0a-803c-ce0b87a42a7f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    ",
											"    var roleName = pm.environment.get(\"role.name\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.name).to.eql(roleName);",
											"    ",
											"    pm.environment.set(\"role.id\", responseData.id);",
											"    pm.environment.set(\"role.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cea7f085-6769-4780-bd5b-80451e86530c",
										"exec": [
											"pm.environment.set(\"role.name\", \"testRole\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{role.name}}\"\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/roles",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5070e45c-4487-49c8-8ca2-4f6161a9017c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.environment.set(\"role.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/roles/{{role.id}}",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roles",
										"{{role.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update role",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "197eb48a-d72f-4f9d-bf2a-947cadfeafa2",
										"exec": [
											"pm.environment.set(\"role.name\", \"testRoleNewName\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4edaa0cb-d7c6-4a57-b001-499c487e7f17",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.environment.set(\"role.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									},
									{
										"key": "If-Match",
										"value": "\"{{role.rowVersion}}\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": \"{{role.id}}\",\r\n\t\"name\": \"{{role.name}}\"\r\n}"
								},
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/roles/{{role.id}}",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roles",
										"{{role.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6df1b28b-b825-4696-8f7c-2b791bd3d426",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/roles",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7109da4-bdc4-40ae-875f-294b0fa74511",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									},
									{
										"key": "If-Match",
										"value": "\"{{role.rowVersion}}\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{identityApiBaseInsecureUrl}}/api/roles/{{role.id}}",
									"host": [
										"{{identityApiBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roles",
										"{{role.id}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "Get token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{account.email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{account.password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{ropcClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{ropcClientSecret}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "openid profile offline_access RivaIdentity",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{identityBaseInsecureUrl}}/connect/token",
									"host": [
										"{{identityBaseInsecureUrl}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Identity web Health check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identityBaseInsecureUrl}}/hc",
							"host": [
								"{{identityBaseInsecureUrl}}"
							],
							"path": [
								"hc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity API Health check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identityApiBaseInsecureUrl}}/hc",
							"host": [
								"{{identityApiBaseInsecureUrl}}"
							],
							"path": [
								"hc"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "administrativeDivisions",
			"item": [
				{
					"name": "states",
					"item": [
						{
							"name": "Create state",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2ffbb2c-8893-4c3b-8d51-8c2d55791df3",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    ",
											"    var name = pm.environment.get(\"state.name\");",
											"    var polishName = pm.environment.get(\"state.polishName\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.name).to.eql(name);",
											"    pm.expect(responseData.polishName).to.eql(polishName);",
											"    ",
											"    pm.environment.set(\"state.id\", responseData.id);",
											"    pm.environment.set(\"state.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c2212a28-4196-4f66-8116-c07ac66fed1b",
										"exec": [
											"pm.environment.set(\"state.name\", \"testName\");",
											"pm.environment.set(\"state.polishName\", \"testPolishName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{state.name}}\",\n\t\"polishName\": \"{{state.polishName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/states",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get state",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41815c58-aff2-41ae-9e52-f0b49e04e497",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.environment.set(\"state.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/states/{{state.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"states",
										"{{state.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update state",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b86fa90-22f2-41d1-b082-2686bf82d9fb",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var name = pm.environment.get(\"state.name\");",
											"    var polishName = pm.environment.get(\"state.polishName\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.name).to.eql(name);",
											"    pm.expect(responseData.polishName).to.eql(polishName);",
											"    ",
											"    pm.environment.set(\"state.id\", responseData.id);",
											"    pm.environment.set(\"state.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a015f5f8-6f57-4163-8ab3-5657cf000008",
										"exec": [
											"pm.environment.set(\"state.name\", \"testName\");",
											"pm.environment.set(\"state.polishName\", \"testPolishName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"value": "{{state.rowVersion}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"{{state.id}}\",\n\t\"name\": \"{{state.name}}\",\n\t\"polishName\": \"{{state.polishName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/states/{{state.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"states",
										"{{state.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete state",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8176166f-d33d-4655-b237-cb859f71999c",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b283b772-5e4d-46ac-874f-127dfe91bd12",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{state.rowVersion}}"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/states/{{state.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"states",
										"{{state.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get states",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b280d06f-30e9-49eb-9496-2cc53a424425",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/states?",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"states"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"disabled": true
										},
										{
											"key": "polishName",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cities",
					"item": [
						{
							"name": "Create city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26ade5e5-81c3-4e48-873d-ee10520bb3d0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    ",
											"    var name = pm.environment.get(\"city.name\");",
											"    var polishName = pm.environment.get(\"city.polishName\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.name).to.eql(name);",
											"    pm.expect(responseData.polishName).to.eql(polishName);",
											"    ",
											"    pm.environment.set(\"city.id\", responseData.id);",
											"    pm.environment.set(\"city.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "901337d1-8b5e-49f4-a7fc-15fed1df458a",
										"exec": [
											"pm.environment.set(\"city.name\", \"testName\");",
											"pm.environment.set(\"city.polishName\", \"testPolishName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{city.name}}\",\n\t\"polishName\": \"{{city.polishName}}\",\n\t\"stateId\": \"{{state.id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cities",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c223fbf-46d4-4043-b20f-715135439cff",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.environment.set(\"city.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cities/{{city.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cities",
										"{{city.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d055511c-0202-48c3-99c6-d1e69a6d9283",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var name = pm.environment.get(\"city.name\");",
											"    var polishName = pm.environment.get(\"city.polishName\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.name).to.eql(name);",
											"    pm.expect(responseData.polishName).to.eql(polishName);",
											"    ",
											"    pm.environment.set(\"city.id\", responseData.id);",
											"    pm.environment.set(\"city.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e9a4653b-f973-48e5-bdc3-51fd5a23f021",
										"exec": [
											"pm.environment.set(\"city.name\", \"testName\");",
											"pm.environment.set(\"city.polishName\", \"testPolishName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{city.rowVersion}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"{{city.id}}\",\n\t\"name\": \"{{city.name}}\",\n\t\"polishName\": \"{{city.polishName}}\",\n\t\"stateId\": \"{{state.id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cities/{{city.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cities",
										"{{city.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82a42226-4dda-46a3-a5f5-57102db27e98",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2151a3c5-9fbb-4238-bb30-45d0cde4552e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{city.rowVersion}}"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cities/{{city.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cities",
										"{{city.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get cities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b57ba2e-e6eb-45fb-a28e-19d7d9facd06",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cities",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cities"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"disabled": true
										},
										{
											"key": "polishName",
											"value": "",
											"disabled": true
										},
										{
											"key": "stateId",
											"value": "{{state.id}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "citiyDistricts",
					"item": [
						{
							"name": "Create city district",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d4188de-5361-424e-ad35-fe279dff7342",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    ",
											"    var name = pm.environment.get(\"cityDistrict.name\");",
											"    var polishName = pm.environment.get(\"cityDistrict.polishName\");",
											"    var cityId = pm.environment.get(\"city.id\");",
											"    var parentId = pm.environment.get(\"cityDistrict.parentId\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.name).to.eql(name);",
											"    pm.expect(responseData.polishName).to.eql(polishName);",
											"    pm.expect(responseData.cityId).to.eql(cityId);",
											"    pm.expect(responseData.parentId).to.eql(parentId);",
											"    pm.expect(responseData.nameVariants).to.include(name);",
											"    pm.expect(responseData.nameVariants).to.include(polishName);",
											"    ",
											"    pm.environment.set(\"cityDistrict.id\", responseData.id);",
											"    pm.environment.set(\"cityDistrict.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6699ca7c-791f-4a4b-a9f9-58110349c05b",
										"exec": [
											"pm.environment.set(\"cityDistrict.name\", \"testName\");",
											"pm.environment.set(\"cityDistrict.polishName\", \"testPolishName\");",
											"pm.environment.set(\"cityDistrict.parentId\", null);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{city.name}}\",\n\t\"polishName\": \"{{city.polishName}}\",\n\t\"cityId\": \"{{city.id}}\",\n\t\"parentId\": \"{{cityDistrict.parentId}}\",\n\t\"nameVariants\": [\"{{cityDistrict.name}}\", \"{{cityDistrict.polishName}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cityDistricts",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cityDistricts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get city district",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1757059-74a8-4f56-9de5-f784a5761871",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.environment.set(\"cityDistrict.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cityDistricts/{{cityDistrict.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cityDistricts",
										"{{cityDistrict.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update city district",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c3f2c40-b0f2-473c-8889-481363afdfa8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var name = pm.environment.get(\"cityDistrict.name\");",
											"    var polishName = pm.environment.get(\"cityDistrict.polishName\");",
											"    var cityId = pm.environment.get(\"city.id\");",
											"    var parentId = pm.environment.get(\"cityDistrict.parentId\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.name).to.eql(name);",
											"    pm.expect(responseData.polishName).to.eql(polishName);",
											"    pm.expect(responseData.cityId).to.eql(cityId);",
											"    pm.expect(responseData.parentId).to.eql(parentId);",
											"    pm.expect(responseData.nameVariants).to.include(name);",
											"    pm.expect(responseData.nameVariants).to.include(polishName);",
											"    ",
											"    pm.environment.set(\"cityDistrict.id\", responseData.id);",
											"    pm.environment.set(\"cityDistrict.rowVersion\", responseData.rowVersion);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d4429242-63cf-46ff-8d5c-92241651abc7",
										"exec": [
											"pm.environment.set(\"cityDistrict.name\", \"testName\");",
											"pm.environment.set(\"cityDistrict.polishName\", \"testPolishName\");",
											"pm.environment.set(\"cityDistrict.parentId\", null);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{cityDistrict.rowVersion}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"{{cityDistrict.id}}\",\n\t\"name\": \"{{cityDistrict.name}}\",\n\t\"polishName\": \"{{cityDistrict.polishName}}\",\n\t\"cityId\": \"{{city.id}}\",\n\t\"parentId\": \"{{cityDistrict.parentId}}\",\n\t\"nameVariants\": [\"{{cityDistrict.name}}\", \"{{cityDistrict.polishName}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cityDistricts/{{cityDistrict.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cityDistricts",
										"{{cityDistrict.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete city district",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abe1414-e0ea-4469-b0d9-2e485f364d4a",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "437c7d7f-5766-4c7d-8934-c2e364f490bd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{cityDistrict.rowVersion}}"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cityDistricts/{{cityDistrict.id}}",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cityDistricts",
										"{{cityDistrict.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get cities district",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9382aa1-2fc1-4e8e-bf1b-80209457fd1e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{administrativeDivisionsBaseInsecureUrl}}/api/cityDistricts",
									"host": [
										"{{administrativeDivisionsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"cityDistricts"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"disabled": true
										},
										{
											"key": "polishName",
											"value": "",
											"disabled": true
										},
										{
											"key": "cityId",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "announcements",
			"item": [
				{
					"name": "roomForRentAnnouncements",
					"item": [
						{
							"name": "Create new room for rent announcements",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "12c51b69-a7d2-4a50-8a22-b947a4950731",
										"exec": [
											"pm.environment.set(\"roomForRentAnnouncement.title\", \"title\");",
											"pm.environment.set(\"roomForRentAnnouncement.sourceUrl\", \"http://otodom.pl\");",
											"pm.environment.set(\"roomForRentAnnouncement.description\", \"description\");",
											"pm.environment.set(\"roomForRentAnnouncement.price\", 1000);",
											"pm.environment.set(\"roomForRentAnnouncement.roomType\", \"Single\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4777dcd5-87dd-4bd3-9beb-e559ad5fea44",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    ",
											"    var title = pm.environment.get(\"roomForRentAnnouncement.title\");",
											"    var sourceUrl = pm.environment.get(\"roomForRentAnnouncement.sourceUrl\");",
											"    var cityId = pm.environment.get(\"city.id\");",
											"    var description = pm.environment.get(\"roomForRentAnnouncement.description\");",
											"    var price = pm.environment.get(\"roomForRentAnnouncement.price\");",
											"    var cityDistrict = pm.environment.get(\"cityDistrict.id\");",
											"    var roomType = pm.environment.get(\"roomForRentAnnouncement.roomType\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.title).to.eql(title);",
											"    pm.expect(responseData.sourceUrl).to.eql(sourceUrl);",
											"    pm.expect(responseData.cityId).to.eql(cityId);",
											"    pm.expect(responseData.description).to.eql(description);",
											"    pm.expect(responseData.price).to.eql(price);",
											"    pm.expect(responseData.cityDistricts).to.include(cityDistrict);",
											"    pm.expect(responseData.roomTypes).to.include(roomType);",
											"    ",
											"    pm.environment.set(\"roomForRentAnnouncement.id\", responseData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"value": "1.0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"{{roomForRentAnnouncement.title}}\",\n\t\"sourceUrl\": \"{{roomForRentAnnouncement.sourceUrl}}\",\n\t\"cityId\": \"{{city.id}}\",\n\t\"description\": \"{{roomForRentAnnouncement.description}}\",\n\t\"price\": \"{{roomForRentAnnouncement.price}}\",\n\t\"cityDistricts\": [\"{{cityDistrict.id}}\"], \n\t\"roomTypes\": [\"{{roomForRentAnnouncement.roomType}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/roomForRentAnnouncements",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roomForRentAnnouncements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get room for rent announcements",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6a31a6ba-d0c9-4f1c-8268-c087697d0b4c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b59a4c4b-a0ee-4bcd-b34e-b0909079c0d7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/roomForRentAnnouncements/{{roomForRentAnnouncement.id}}",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roomForRentAnnouncements",
										"{{roomForRentAnnouncement.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update new room for rent announcements",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c897ca0c-9de6-47f5-965a-000b44395ea4",
										"exec": [
											"pm.environment.set(\"roomForRentAnnouncement.title\", \"title\");",
											"pm.environment.set(\"roomForRentAnnouncement.sourceUrl\", \"http://otodom.pl\");",
											"pm.environment.set(\"roomForRentAnnouncement.description\", \"description\");",
											"pm.environment.set(\"roomForRentAnnouncement.price\", 1000);",
											"pm.environment.set(\"roomForRentAnnouncement.roomType\", \"Single\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ca41c8af-51bf-477f-8585-2e9e6b021179",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var title = pm.environment.get(\"roomForRentAnnouncement.title\");",
											"    var sourceUrl = pm.environment.get(\"roomForRentAnnouncement.sourceUrl\");",
											"    var cityId = pm.environment.get(\"city.id\");",
											"    var description = pm.environment.get(\"roomForRentAnnouncement.description\");",
											"    var price = pm.environment.get(\"roomForRentAnnouncement.price\");",
											"    var cityDistrict = pm.environment.get(\"cityDistrict.id\");",
											"    var roomType = pm.environment.get(\"roomForRentAnnouncement.roomType\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.title).to.eql(title);",
											"    pm.expect(responseData.sourceUrl).to.eql(sourceUrl);",
											"    pm.expect(responseData.cityId).to.eql(cityId);",
											"    pm.expect(responseData.description).to.eql(description);",
											"    pm.expect(responseData.price).to.eql(price);",
											"    pm.expect(responseData.cityDistricts).to.include(cityDistrict);",
											"    pm.expect(responseData.roomTypes).to.include(roomType);",
											"    ",
											"    pm.environment.set(\"roomForRentAnnouncement.id\", responseData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"{{roomForRentAnnouncement.id}}\",\n\t\"title\": \"{{roomForRentAnnouncement.title}}\",\n\t\"sourceUrl\": \"{{roomForRentAnnouncement.sourceUrl}}\",\n\t\"cityId\": \"{{city.id}}\",\n\t\"description\": \"{{roomForRentAnnouncement.description}}\",\n\t\"price\": \"{{roomForRentAnnouncement.price}}\",\n\t\"cityDistricts\": [\"{{cityDistrict.id}}\"], \n\t\"roomTypes\": [\"{{roomForRentAnnouncement.roomType}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/roomForRentAnnouncements/{{roomForRentAnnouncement.id}}",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roomForRentAnnouncements",
										"{{roomForRentAnnouncement.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete room for rent announcements",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0824d079-517d-4718-a4ba-a0b0309e3779",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/roomForRentAnnouncements/{{roomForRentAnnouncement.id}}",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roomForRentAnnouncements",
										"{{roomForRentAnnouncement.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get room for rent announcements",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/roomForRentAnnouncements",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"roomForRentAnnouncements"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "createdFrom",
											"value": "",
											"disabled": true
										},
										{
											"key": "createdTo",
											"value": null,
											"disabled": true
										},
										{
											"key": "cityId",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceFrom",
											"value": null,
											"disabled": true
										},
										{
											"key": "priceTo",
											"value": null,
											"disabled": true
										},
										{
											"key": "roomType",
											"value": "",
											"disabled": true
										},
										{
											"key": "cityDistrict",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "flatForRentAnnouncements",
					"item": [
						{
							"name": "Create new flat for rent announcements",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5e67772-2643-4d52-bf36-1f1cc7a571a9",
										"exec": [
											"pm.environment.set(\"flatForRentAnnouncement.title\", \"title\");",
											"pm.environment.set(\"flatForRentAnnouncement.sourceUrl\", \"http://otodom.pl\");",
											"pm.environment.set(\"flatForRentAnnouncement.description\", \"description\");",
											"pm.environment.set(\"flatForRentAnnouncement.price\", 1000);",
											"pm.environment.set(\"flatForRentAnnouncement.numberOfRooms\", \"One\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ce303b1c-9fd8-421c-9e12-668bf43247a1",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    ",
											"    var title = pm.environment.get(\"flatForRentAnnouncement.title\");",
											"    var sourceUrl = pm.environment.get(\"flatForRentAnnouncement.sourceUrl\");",
											"    var cityId = pm.environment.get(\"city.id\");",
											"    var description = pm.environment.get(\"flatForRentAnnouncement.description\");",
											"    var price = pm.environment.get(\"flatForRentAnnouncement.price\");",
											"    var cityDistrict = pm.environment.get(\"cityDistrict.id\");",
											"    var numberOfRooms = pm.environment.get(\"flatForRentAnnouncement.numberOfRooms\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.title).to.eql(title);",
											"    pm.expect(responseData.sourceUrl).to.eql(sourceUrl);",
											"    pm.expect(responseData.cityId).to.eql(cityId);",
											"    pm.expect(responseData.description).to.eql(description);",
											"    pm.expect(responseData.price).to.eql(price);",
											"    pm.expect(responseData.cityDistricts).to.include(cityDistrict);",
											"    pm.expect(responseData.numberOfRooms).to.eql(numberOfRooms);",
											"    ",
											"    pm.environment.set(\"flatForRentAnnouncement.id\", responseData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"{{flatForRentAnnouncement.title}}\",\n\t\"sourceUrl\": \"{{flatForRentAnnouncement.sourceUrl}}\",\n\t\"cityId\": \"{{city.id}}\",\n\t\"description\": \"{{flatForRentAnnouncement.description}}\",\n\t\"price\": \"{{flatForRentAnnouncement.price}}\",\n\t\"cityDistricts\": [\"{{cityDistrict.id}}\"], \n\t\"numberOfRooms\": \"{{flatForRentAnnouncement.numberOfRooms}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/flatForRentAnnouncements",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"flatForRentAnnouncements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get flat for rent announcements",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d4625282-98e6-45c0-8692-78080efcd23b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f3eb3875-f55b-4f7f-9a99-66e89cba29d1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/flatForRentAnnouncements/{{flatForRentAnnouncement.id}}",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"flatForRentAnnouncements",
										"{{flatForRentAnnouncement.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update new flat for rent announcements",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "62bd4fc7-fc80-462e-94d5-759c7a8d6cf7",
										"exec": [
											"pm.environment.set(\"flatForRentAnnouncement.title\", \"title\");",
											"pm.environment.set(\"flatForRentAnnouncement.sourceUrl\", \"http://otodom.pl\");",
											"pm.environment.set(\"flatForRentAnnouncement.description\", \"description\");",
											"pm.environment.set(\"flatForRentAnnouncement.price\", 1000);",
											"pm.environment.set(\"flatForRentAnnouncement.numberOfRooms\", \"One\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7b06b5b1-efd4-4d46-b6b7-77cfab0b1b0b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var title = pm.environment.get(\"flatForRentAnnouncement.title\");",
											"    var sourceUrl = pm.environment.get(\"flatForRentAnnouncement.sourceUrl\");",
											"    var cityId = pm.environment.get(\"city.id\");",
											"    var description = pm.environment.get(\"flatForRentAnnouncement.description\");",
											"    var price = pm.environment.get(\"flatForRentAnnouncement.price\");",
											"    var cityDistrict = pm.environment.get(\"cityDistrict.id\");",
											"    var numberOfRooms = pm.environment.get(\"flatForRentAnnouncement.numberOfRooms\");",
											"    var responseData = JSON.parse(responseBody);",
											"    ",
											"    pm.expect(responseData.title).to.eql(title);",
											"    pm.expect(responseData.sourceUrl).to.eql(sourceUrl);",
											"    pm.expect(responseData.cityId).to.eql(cityId);",
											"    pm.expect(responseData.description).to.eql(description);",
											"    pm.expect(responseData.price).to.eql(price);",
											"    pm.expect(responseData.cityDistricts).to.include(cityDistrict);",
											"    pm.expect(responseData.numberOfRooms).to.eql(numberOfRooms);",
											"    ",
											"    pm.environment.set(\"flatForRentAnnouncement.id\", responseData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"{{flatForRentAnnouncement.id}}\",\n\t\"title\": \"{{flatForRentAnnouncement.title}}\",\n\t\"sourceUrl\": \"{{flatForRentAnnouncement.sourceUrl}}\",\n\t\"cityId\": \"{{city.id}}\",\n\t\"description\": \"{{flatForRentAnnouncement.description}}\",\n\t\"price\": \"{{flatForRentAnnouncement.price}}\",\n\t\"cityDistricts\": [\"{{cityDistrict.id}}\"], \n\t\"numberOfRooms\": \"{{flatForRentAnnouncement.numberOfRooms}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/flatForRentAnnouncements/{{flatForRentAnnouncement.id}}",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"flatForRentAnnouncements",
										"{{flatForRentAnnouncement.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete flat for rent announcements",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0eac3e4c-4a43-46ec-a2b0-eaef6456234f",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/flatForRentAnnouncements/{{flatForRentAnnouncement.id}}",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"flatForRentAnnouncements",
										"{{flatForRentAnnouncement.id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get flat for rent announcements",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "api-version",
										"type": "text",
										"value": "1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{announcementsBaseInsecureUrl}}/api/flatForRentAnnouncements",
									"host": [
										"{{announcementsBaseInsecureUrl}}"
									],
									"path": [
										"api",
										"flatForRentAnnouncements"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "createdFrom",
											"value": "",
											"disabled": true
										},
										{
											"key": "createdTo",
											"value": null,
											"disabled": true
										},
										{
											"key": "cityId",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceFrom",
											"value": null,
											"disabled": true
										},
										{
											"key": "priceTo",
											"value": null,
											"disabled": true
										},
										{
											"key": "roomType",
											"value": "",
											"disabled": true
										},
										{
											"key": "cityDistrict",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImllVVBaNVc0NFd5THZQWHBIQ0hESnciLCJ0eXAiOiJhdCtqd3QifQ.eyJuYmYiOjE1ODY5MDUxNjUsImV4cCI6MTU4NjkwODc2NSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjpbIlJpdmFJZGVudGl0eSIsIlJpdmFBbm5vdW5jZW1lbnQiLCJSaXZhQWRtaW5pc3RyYXRpdmVEaXZpc2lvbiJdLCJjbGllbnRfaWQiOiIwY2Y3ZGZhYS1kMjk2LTRhOGQtOGYzYy00ZGE3OTlkZGM1MjYiLCJzdWIiOiI1NzRmYmQ3YS0zYjE1LTRiOWEtOTAxMC0yYmE2NGFjN2U2NzMiLCJhdXRoX3RpbWUiOjE1ODY5MDUxNjUsImlkcCI6ImxvY2FsIiwicm9sZSI6WyJBZG1pbmlzdHJhdG9yIiwiVXNlciJdLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiQWRtaW5pc3RyYXRvciIsIlVzZXIiXSwiZW1haWwiOiJtaWNoYWxnbG93YWN6ZXdza2lAZ21haWwuY29tIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvZW1haWxhZGRyZXNzIjoibWljaGFsZ2xvd2FjemV3c2tpQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoibWljaGFsZ2xvd2FjemV3c2tpQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiNTc0ZmJkN2EtM2IxNS00YjlhLTkwMTAtMmJhNjRhYzdlNjczIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsIlJpdmFJZGVudGl0eSIsIlJpdmFBbm5vdW5jZW1lbnQiLCJSaXZhQWRtaW5pc3RyYXRpdmVEaXZpc2lvbiIsIm9mZmxpbmVfYWNjZXNzIl0sImFtciI6WyJwd2QiXX0.qJSG-xg2Ua6Xyfume_F3Lw9s89mYbQiu_CdzZfFp-Y4VX3-s8Q2W2IPF0NEJwEtIYQJkdCtyNFBNWbbX3K7_QjqSqxJIUA-wJEyiXO2b2BBK2UgK24YjmmEKS1gKbYoAg4wy5XmZ1dBe-niae3VwaMMnd-rT-5i7Ru63NTuInhWsivm6NlVc0BcCLHj2TtBk7I2Obfx-mXN-dKfpmbF_eIPMES06umJlpPpQsKRE03xi2z7TXxuo0uXiB4MbZidctLykaIpdsE3ikkMWjzQgBhcQQwS7mJQSUT0lMT-ha_PawRCWrIA_DeaQHR39iFIxAfwjOF_HUrU01AlWXROOYQ",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6e522455-ceec-4a1a-9b54-528c9a1251af",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3444b9a7-ba78-49c2-a9c2-05e0948df314",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ecf1eb7d-8680-461b-a103-1db9b49e50ac",
			"key": "identityBaseInsecureUrl",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"id": "438d83d4-ddde-4758-a8ae-375499cf5d09",
			"key": "ropcClientId",
			"value": "c7c8a345-770b-4cdf-927c-2b35879394a2",
			"type": "string"
		},
		{
			"id": "090c9ba5-ba30-4ecb-b992-eee727091857",
			"key": "ropcClientSecret",
			"value": "secret",
			"type": "string"
		},
		{
			"id": "964352f1-488c-4726-b54c-98a45a30595c",
			"key": "postmanClientId",
			"value": "0cf7dfaa-d296-4a8d-8f3c-4da799ddc526",
			"type": "string"
		},
		{
			"id": "d38f7d69-d980-42bc-8f33-6adc03f31661",
			"key": "identityApiBaseInsecureUrl",
			"value": "http://localhost:5001",
			"type": "string"
		},
		{
			"id": "8914fced-bf28-46bb-bef7-62a5e8539cf1",
			"key": "administrativeDivisionsBaseInsecureUrl",
			"value": "http://localhost:5002",
			"type": "string"
		},
		{
			"id": "d208dd6e-7080-468d-8563-1e05321c013e",
			"key": "announcementsBaseInsecureUrl",
			"value": "http://localhost:5003",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}