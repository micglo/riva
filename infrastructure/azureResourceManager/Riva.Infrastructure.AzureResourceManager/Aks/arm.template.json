{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "allowedValues": [
        "Riva"
      ]
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Dev",
        "Test",
        "Prod"
      ]
    },
    "locationShort": {
      "type": "string",
      "allowedValues": [
        "WE"
      ]
    },
    "aksStorageAccountSku": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ]
    },
    "aksAgentCount": {
      "type": "int",
      "metadata": {
        "description": "The number of nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 100
    },
    "aksAgentVMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "aksOsDiskSizeGB": {
      "type": "int",
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "aksAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The administrator username to use for VMs."
      }
    },
    "aksSSHRSAPublicKey": {
      "type": "string",
      "metadata": {
        "description": "SSH configuration for Linux-based VMs running on Azure."
      }
    },
    "aksPrincipalClientId": {
      "type": "string",
      "metadata": {
        "description": "The ID for the service principal."
      }
    },
    "aksPrincipalClientSecret": {
      "type": "string",
      "metadata": {
        "description": "The secret password associated with the service principal in plain text."
      }
    }
  },
  "variables": {
    "resourceNameConvention": {
      "prefix": "[concat(parameters('projectName'), '-', parameters('environment'), '-', parameters('locationShort'), '-')]",
      "suffix": {
        "aksStorageAccount": "AksStorage",
        "aks": "Aks"
      },
      "stagePrefixToLower": "[toLower(parameters('environment'))]"
    },
    "aksStorageAccountName": "[concat(toLower(parameters('projectName')), toLower(variables('resourceNameConvention').suffix.aksStorageAccount))]",
    "aksName": "[concat(variables('resourceNameConvention').prefix, variables('resourceNameConvention').suffix.aks)]",
    "aksPropertiesDnsPrefix": "[concat(variables('aksName'), '-dns')]",
    "aksPropertiesAddonProfiles": {
      "httpApplicationRouting": {
        "enabled": "[or(equals(variables('resourceNameConvention').stagePrefixToLower, 'dev'), equals(variables('resourceNameConvention').stagePrefixToLower, 'test'))]"
      }
    },
    "aksPropertiesNodeResourceGroup": "[concat(resourceGroup().name, '-node')]"
  },
  "resources": [
    {
      "name": "[variables('aksStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('aksStorageAccountSku')]"
      }
    },
    {
      "name": "[variables('aksName')]",
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "kubernetesVersion": "1.15.11",
        "dnsPrefix": "[variables('aksPropertiesDnsPrefix')]",
        "agentPoolProfiles": [
          {
            "count": "[parameters('aksAgentCount')]",
            "vmSize": "[parameters('aksAgentVMSize')]",
            "osDiskSizeGB": "[parameters('aksOsDiskSizeGB')]",
            "type": "AvailabilitySet",
            "name": "agentpool"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[parameters('aksAdminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('aksSSHRSAPublicKey')]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "clientId": "[parameters('aksPrincipalClientId')]",
          "Secret": "[parameters('aksPrincipalClientSecret')]"
        },
        "addonProfiles": "[variables('aksPropertiesAddonProfiles')]",
        "nodeResourceGroup": "[variables('aksPropertiesNodeResourceGroup')]",
        "enableRBAC": true
      }
    }
  ],
  "outputs": {
    "aksName": {
      "type": "string",
      "value": "[variables('aksName')]"
    },
    "aksControlPlaneFQDN": {
      "type": "string",
      "value": "[reference(variables('aksName')).fqdn]"
    },
    "aksStorageAccountName": {
      "type": "string",
      "value": "[variables('aksStorageAccountName')]"
    },
    "aksStorageAccountKey": {
      "type": "string",
      "value": "[listKeys(variables('aksStorageAccountName'),'2015-05-01-preview').key1]"
    }
  }
}
