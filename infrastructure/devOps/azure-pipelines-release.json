{
  "source": 2,
  "revision": 99,
  "description": null,
  "createdBy": {
    "displayName": "Michał Głowaczewski",
    "url": "https://spsprodeus22.vssps.visualstudio.com/Aa3d04ae2-13e3-443e-8631-e6e1f0281325/_apis/Identities/2091925e-cf59-4280-ab05-8beb78f42c49",
    "_links": {
      "avatar": {
        "href": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
      }
    },
    "id": "2091925e-cf59-4280-ab05-8beb78f42c49",
    "uniqueName": "michalglowaczewski@hotmail.com",
    "imageUrl": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw",
    "descriptor": "msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
  },
  "createdOn": "2020-02-27T18:25:03.367Z",
  "modifiedBy": {
  },
  "modifiedOn": "",
  "isDeleted": false,
  "lastRelease": {
  },
  "variables": {
    "Aks.Namespace.Riva.Name": {
      "value": "riva"
    },
    "Aks.Sp.AppId": {
      "value": ""
    },
    "Aks.Sp.Secret": {
      "value": ""
    },
    "KeyVault.AccessPolicy.Application.ObjectId": {
      "value": "5719aa6d-b63b-4824-a7a2-aa773b996564"
    },
    "KeyVault.Secret.Facebook.AppId.Name": {
      "value": "Auth--FacebookAppId"
    },
    "KeyVault.Secret.Facebook.AppSecret.Name": {
      "value": "Auth--FacebookAppSecret"
    },
    "KeyVault.Secret.Google.ClientId.Name": {
      "value": "Auth--GoogleClientId"
    },
    "KeyVault.Secret.Google.ClientSecret.Name": {
      "value": "Auth--GoogleClientSecret"
    },
    "KeyVault.Secret.SendGrid.Api.Key.Name": {
      "value": "sendGridApiKey"
    },
    "SendGrid.Api.Key": {
      "value": "*****"
    },
    "SSHRSA.PublicKey": {
      "value": "*****"
    }
  },
  "variableGroups": [
    6
  ],
  "environments": [
    {
      "id": 43,
      "name": "Dev",
      "rank": 1,
      "owner": {
        "displayName": "Michał Głowaczewski",
        "url": "https://spsprodeus22.vssps.visualstudio.com/Aa3d04ae2-13e3-443e-8631-e6e1f0281325/_apis/Identities/2091925e-cf59-4280-ab05-8beb78f42c49",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
          }
        },
        "id": "2091925e-cf59-4280-ab05-8beb78f42c49",
        "uniqueName": "michalglowaczewski@hotmail.com",
        "imageUrl": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw",
        "descriptor": "msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
      },
      "variables": {
        "SQLServer.Administrator.Login": {
          "value": "*****"
        },
        "SQLServer.Administrator.Login.Password": {
          "value": "*****"
        }
      },
      "variableGroups": [
        7
      ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 129
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 130
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 131
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_RivaTools-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": [
                  ]
                }
              ]
            },
            "queueId": 18,
            "demands": [
            ],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {
            }
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy infrastructure",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {
              },
              "taskId": "ef9c6e68-b2d1-4123-9624-f34de3dcfdcd",
              "version": "1.*",
              "name": "Compose Azure Resource Group name",
              "refName": "",
              "enabled": true,
              "alwaysRun": true,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "metaTask",
              "overrideInputs": {
              },
              "condition": "succeededOrFailed()",
              "inputs": {
                "locationShort": "$(Location.WestEurope.ShortName)",
                "projectName": "$(Project.Name)",
                "stage": "$(Stage)",
                "vsoResourceGroupVariableName": "ResourceGroup.Name"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Security",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Security/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Security/arm.parameters.dev.json",
                "overrideParameters": "-keyVaultAccessPolicyObjectId $(KeyVault.AccessPolicy.Application.ObjectId)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.Security)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Containers",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Containers/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Containers/arm.parameters.dev.json",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.Containers)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Monitoring",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Monitoring/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Monitoring/arm.parameters.dev.json",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.Monitoring)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Integrations",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Integrations/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Integrations/arm.parameters.dev.json",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.Integrations)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Databases",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Databases/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Databases/arm.parameters.dev.json",
                "overrideParameters": "-sqlServerAdministratorLogin $(SQLServer.Administrator.Login) -sqlServerAdministratorLoginPassword $(SQLServer.Administrator.Login.Password)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.Databases)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - App services",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/AppServices/arm.template.dev.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/AppServices/arm.parameters.dev.json",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.AppServices)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Security",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.Deployment.Security)"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Containers",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.Deployment.Containers)"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Monitoring",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.Deployment.Monitoring)"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Integrations",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.Deployment.Integrations)"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Databases",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.Deployment.Databases)"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - App services",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.Deployment.AppServices)"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Function apps",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/FunctionApps/arm.template.dev.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/FunctionApps/arm.parameters.dev.json",
                "overrideParameters": "-storageAccountName $(functionsStorageAccountName) -storageAccountKey $(functionsStorageAccountKey) -rivaMessagesFunctionsAppServicePlanResourceId $(rivaMessagesFunctionsAppServicePlanResourceId) -rivaAnnouncementPreferencesFunctionsAppServicePlanResourceId $(rivaAnnouncementPreferencesFunctionsAppServicePlanResourceId) -rivaAnnouncementPreferenceMatchersFunctionsAppServicePlanResourceId $(rivaAnnouncementPreferenceMatchersFunctionsAppServicePlanResourceId) -rivaAnnouncementPreferenceSendersFunctionsAppServicePlanResourceId $(rivaAnnouncementPreferenceSendersFunctionsAppServicePlanResourceId) -rivaAnnouncementsFunctionsAppServicePlanResourceId $(rivaAnnouncementsFunctionsAppServicePlanResourceId) -appInsightsInstrumentationKey $(appInsightsInstrumentationKey) -serviceBusConnectionString \"$(serviceBusConnectionString)\" -cosmosDbUri \"$(cosmosDbUri)\" -cosmosDbPrimaryMasterKey $(cosmosDbPrimaryMasterKey) -cosmosDbPrimaryConnectionString \"$(cosmosDbPrimaryConnectionString)\" -sendGridApiKey $(SendGrid.Api.Key) -cosmosDbAnnouncementPreferencesDatabaseName $(cosmosDbAnnouncementPreferencesDatabaseName) -cosmosDbAnnouncementPreferencesContainerThroughput $(cosmosDbAnnouncementPreferencesContainerThroughput)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.FunctionApps)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Create signing credential certificate",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "pscore",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/CreateSigningCredentialCertificate.ps1",
                "inlineScript": "",
                "scriptArguments": "-KeyVaultName $(keyVaultName) -SigningCredentialCertificateName $(KeyVault.Certificate.SigningCredential.Name)",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Set SendGrid apiKey key vault secret",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "pscore",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/SetKeyVaultSecret.ps1",
                "inlineScript": "",
                "scriptArguments": "-KeyVaultName $(keyVaultName) -SecretName $(KeyVault.Secret.SendGrid.Api.Key.Name) -SecretValue $(SendGrid.Api.Key)",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Set Google clientId key vault secret",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "pscore",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/SetKeyVaultSecret.ps1",
                "inlineScript": "",
                "scriptArguments": "-KeyVaultName $(keyVaultName) -SecretName $(KeyVault.Secret.Google.ClientId.Name) -SecretValue $(Google.ClientId)",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Set Google clientSecret key vault secret",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "pscore",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/SetKeyVaultSecret.ps1",
                "inlineScript": "",
                "scriptArguments": "-KeyVaultName $(keyVaultName) -SecretName $(KeyVault.Secret.Google.ClientSecret.Name) -SecretValue $(Google.ClientSecret)",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Set Facebook appId key vault secret",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "pscore",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/SetKeyVaultSecret.ps1",
                "inlineScript": "",
                "scriptArguments": "-KeyVaultName $(keyVaultName) -SecretName $(KeyVault.Secret.Facebook.AppId.Name) -SecretValue $(Facebook.AppId)",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Set Facebook appSecret key vault secret",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "pscore",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/SetKeyVaultSecret.ps1",
                "inlineScript": "",
                "scriptArguments": "-KeyVaultName $(keyVaultName) -SecretName $(KeyVault.Secret.Facebook.AppSecret.Name) -SecretValue $(Facebook.AppSecret)",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_Riva-Infrastructure-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": [
                  ]
                },
                {
                  "alias": "_RivaTools-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": [
                  ]
                }
              ]
            },
            "queueId": 18,
            "demands": [
            ],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {
            }
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Deploy AKS",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {
              },
              "taskId": "ef9c6e68-b2d1-4123-9624-f34de3dcfdcd",
              "version": "1.*",
              "name": "Compose Azure Resource Group name",
              "refName": "",
              "enabled": false,
              "alwaysRun": true,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "metaTask",
              "overrideInputs": {
              },
              "condition": "succeededOrFailed()",
              "inputs": {
                "locationShort": "$(Location.WestEurope.ShortName)",
                "projectName": "$(Project.Name)",
                "stage": "$(Stage)",
                "vsoResourceGroupVariableName": "ResourceGroup.Name"
              }
            },
            {
              "environment": {
              },
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Compose AKS Service Principal name and secret names",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "$firstProjectNamePrefixLetter = \"$(rivaProjectName)\".ToCharArray(0, 1)[0].ToString().ToUpper()\n$projectNamePrefix = \"$firstProjectNamePrefixLetter\" + \"$(rivaProjectName)\".Substring(1).ToLower()\n\n$firstStagePrefixLetter = \"$(stage)\".ToCharArray(0, 1)[0].ToString().ToUpper()\n$stagePrefix = \"$firstStagePrefixLetter\" + \"$(stage)\".Substring(1).ToLower()\n\n$firstLocationShortPrefixLetter = \"$(locationShort)\".ToCharArray(0, 1)[0].ToString().ToUpper()\n$locationShortPrefix = \"$firstLocationShortPrefixLetter\" + \"$(locationShort)\".Substring(1).ToLower()\n\n$aksSpName = \"$projectNamePrefix\" + \"$stagePrefix\" + \"$locationShortPrefix\" + \"AksSp\"\n$aksSpSecretName = \"$projectNamePrefix\" + \"$stagePrefix\" + \"$locationShortPrefix\" + \"AksSpSecret\"\n\nWrite-Host $aksSpName\nWrite-Host $aksSpSecretName\nWrite-Host \"##vso[task.setvariable variable=Aks.Sp.Name;]$aksSpName\"\nWrite-Host \"##vso[task.setvariable variable=Aks.Sp.SecretName;]$aksSpSecretName\"",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Security",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.SecurityDeployment.Name)"
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Create Service Principal",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "ps",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/CreateServicePrincipal.ps1",
                "inlineScript": "",
                "scriptArguments": "-SpName $(Aks.Sp.Name) -KeyVaultName $(keyVaultName) -SpSecretName $(Aks.Sp.SecretName) -CreatedSpAppIdVsoVariableName \"Aks.Sp.AppId\"",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "84f23c57-8c65-4709-bc94-5cbd44e96a54",
              "version": "2.*",
              "name": "Get created Service Principal secret",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "Action": "GetSecret",
                "KeyVaultName": "$(keyVaultName)",
                "SecretName": "$(Aks.Sp.SecretName)",
                "Secret": "",
                "CertificateName": "",
                "CertificateFile": "",
                "ObjectId": "",
                "PermissionsToKeys": "decrypt,encrypt,unwrapKey,wrapKey,verify,sign,get,list,update,create,import,delete,backup,restore,recover,purge",
                "PermissionsToSecrets": "get,list,set,delete,backup,restore,recover,purge",
                "PermissionsToCertificates": "get,list,delete,create,import,update,managecontacts,getissuers,listissuers,setissuers,deleteissuers,manageissuers,recover,purge,backup,restore",
                "PermissionsToStorage": "get,list,delete,set,update,regeneratekey,getsas,listsas,deletesas,setsas,recover,backup,restore,purge",
                "VariableName": "Aks.Sp.Secret",
                "CertificatePassword": "",
                "Overwrite": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Aks",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Aks/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Aks/arm.parameters.dev.json",
                "overrideParameters": "-aksPrincipalClientId $(Aks.Sp.AppId) -aksPrincipalClientSecret $(Aks.Sp.Secret) -aksSSHRSAPublicKey \"$(SSHRSA.PublicKey)\"",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.AksDeployment.Name)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {
              },
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfd",
              "version": "0.*",
              "name": "Install Kubectl latest",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "kubectlVersion": "latest"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Aks",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.AksDeployment.Name)"
              }
            },
            {
              "environment": {
              },
              "taskId": "584bcff2-3353-4f11-872b-6ba01267a972",
              "version": "5.*",
              "name": "ARM Outputs - Containers",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": "$(ResourceGroup.ContainersDeployment.Name)"
              }
            },
            {
              "environment": {
              },
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Compose acrPush service principal variables",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "$acrPushSpName = \"$(acrName)\" + \"PushSp\"\n$acrPushSpSecretName = \"$acrPushSpName\" + \"Secret\"\n\n\nWrite-Host $acrPushSpName \nWrite-Host $acrPushSpSecretName \n\nWrite-Host \"##vso[task.setvariable variable=Acr.PushSp.Name;]$acrPushSpName\"\nWrite-Host \"##vso[task.setvariable variable=Acr.PushSp.SecretName;]$acrPushSpSecretName\"",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {
              },
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "2.*",
              "name": "Configure AKS",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "$(ServiceConnection.Azure.Portal)",
                "scriptType": "ps",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_RivaTools-CI/Scripts/ConfigureAks.ps1",
                "inlineScript": "",
                "scriptArguments": "-RgName $(ResourceGroup.Name) -AksName $(aksName) -AcrName $(acrName) -AksNamespaceName $(Aks.Namespace.Name) -AcrPushSpName $(Acr.PushSp.Name) -AcrPushSpSecretName $(Acr.PushSp.SecretName) -KeyVaultName $(keyVaultName)",
                "powerShellErrorActionPreference": "stop",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false",
                "powerShellIgnoreLASTEXITCODE": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [
      ],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": 1,
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [
      ],
      "currentRelease": {
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
      },
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": [
        ]
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": [
        ]
      },
      "environmentTriggers": [
      ],
      "badgeUrl": "https://vsrm.dev.azure.com/michalglowaczewski/_apis/public/Release/badge/e3ccb07b-c829-45b6-9ecc-a2c8962d7f21/35/43"
    },
    {
      "id": 56,
      "name": "Local",
      "rank": 2,
      "owner": {
        "displayName": "Michał Głowaczewski",
        "url": "https://spsprodeus22.vssps.visualstudio.com/Aa3d04ae2-13e3-443e-8631-e6e1f0281325/_apis/Identities/2091925e-cf59-4280-ab05-8beb78f42c49",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
          }
        },
        "id": "2091925e-cf59-4280-ab05-8beb78f42c49",
        "uniqueName": "michalglowaczewski@hotmail.com",
        "imageUrl": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw",
        "descriptor": "msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
      },
      "variables": {
      },
      "variableGroups": [
        10
      ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 168
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 169
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 170
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_RivaTools-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": [
                  ]
                }
              ]
            },
            "queueId": 18,
            "demands": [
            ],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {
            }
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy infrastructure",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {
              },
              "taskId": "ef9c6e68-b2d1-4123-9624-f34de3dcfdcd",
              "version": "1.*",
              "name": "Compose Azure Resource Group name",
              "refName": "",
              "enabled": true,
              "alwaysRun": true,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "metaTask",
              "overrideInputs": {
              },
              "condition": "succeededOrFailed()",
              "inputs": {
                "locationShort": "$(Location.WestEurope.ShortName)",
                "projectName": "$(Project.Name)",
                "stage": "$(Stage)",
                "vsoResourceGroupVariableName": "ResourceGroup.Name"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Integrations",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Integrations/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Integrations/arm.parameters.local.json",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.Integrations)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [
      ],
      "conditions": [
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [
      ],
      "currentRelease": {
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
      },
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": [
        ]
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": [
        ]
      },
      "environmentTriggers": [
      ],
      "badgeUrl": "https://vsrm.dev.azure.com/michalglowaczewski/_apis/public/Release/badge/e3ccb07b-c829-45b6-9ecc-a2c8962d7f21/35/56"
    },
    {
      "id": 57,
      "name": "Docker",
      "rank": 3,
      "owner": {
        "displayName": "Michał Głowaczewski",
        "url": "https://spsprodeus22.vssps.visualstudio.com/Aa3d04ae2-13e3-443e-8631-e6e1f0281325/_apis/Identities/2091925e-cf59-4280-ab05-8beb78f42c49",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
          }
        },
        "id": "2091925e-cf59-4280-ab05-8beb78f42c49",
        "uniqueName": "michalglowaczewski@hotmail.com",
        "imageUrl": "https://dev.azure.com/michalglowaczewski/_apis/GraphProfile/MemberAvatars/msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw",
        "descriptor": "msa.N2U1ZTY5YzAtN2EyOC03ODgxLWI1MmUtN2JlMjk5OTQxYzEw"
      },
      "variables": {
      },
      "variableGroups": [
        11
      ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 171
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 172
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 173
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_RivaTools-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": [
                  ]
                }
              ]
            },
            "queueId": 18,
            "demands": [
            ],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {
            }
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy infrastructure",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {
              },
              "taskId": "ef9c6e68-b2d1-4123-9624-f34de3dcfdcd",
              "version": "1.*",
              "name": "Compose Azure Resource Group name",
              "refName": "",
              "enabled": true,
              "alwaysRun": true,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "metaTask",
              "overrideInputs": {
              },
              "condition": "succeededOrFailed()",
              "inputs": {
                "locationShort": "$(Location.WestEurope.ShortName)",
                "projectName": "$(Project.Name)",
                "stage": "$(Stage)",
                "vsoResourceGroupVariableName": "ResourceGroup.Name"
              }
            },
            {
              "environment": {
              },
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Create or update resource group - Integrations",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {
              },
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(ServiceConnection.Azure.Portal)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroup.Name)",
                "location": "$(Location.WestEurope.Name)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Integrations/arm.template.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/_Riva-Infrastructure-CI/RivaInfrastructureArm/Integrations/arm.parameters.docker.json",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "$(ResourceGroup.Deployment.Integrations)",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [
      ],
      "conditions": [
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [
      ],
      "currentRelease": {
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
      },
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": [
        ]
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": [
        ]
      },
      "environmentTriggers": [
      ],
      "badgeUrl": "https://vsrm.dev.azure.com/michalglowaczewski/_apis/public/Release/badge/e3ccb07b-c829-45b6-9ecc-a2c8962d7f21/35/57"
    }
  ],
  "artifacts": [
    {
      "sourceId": "e3ccb07b-c829-45b6-9ecc-a2c8962d7f21:67",
      "type": "Build",
      "alias": "_Riva-Infrastructure-CI",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/michalglowaczewski/_permalink/_build/index?collectionId=459c1c31-dc35-4eea-9eaa-d677103c7c40&projectId=e3ccb07b-c829-45b6-9ecc-a2c8962d7f21&definitionId=67",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "67",
          "name": "RivaCommon-Infrastructure-CI"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "e3ccb07b-c829-45b6-9ecc-a2c8962d7f21",
          "name": "Riva"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "e3ccb07b-c829-45b6-9ecc-a2c8962d7f21:56",
      "type": "Build",
      "alias": "_RivaTools-CI",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/michalglowaczewski/_permalink/_build/index?collectionId=459c1c31-dc35-4eea-9eaa-d677103c7c40&projectId=e3ccb07b-c829-45b6-9ecc-a2c8962d7f21&definitionId=56",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "56",
          "name": "RivaTools-CI"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "e3ccb07b-c829-45b6-9ecc-a2c8962d7f21",
          "name": "Riva"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isPrimary": true,
      "isRetained": false
    }
  ],
  "triggers": [
  ],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [
  ],
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseClone"
    },
    "IntegrateJiraWorkItems": {
      "$type": "System.String",
      "$value": "false"
    },
    "IntegrateBoardsWorkItems": {
      "$type": "System.String",
      "$value": "False"
    }
  },
  "id": 35,
  "name": "RivaInfrastructure-CD",
  "path": "\\",
  "projectReference": null,
  "url": "https://vsrm.dev.azure.com/michalglowaczewski/e3ccb07b-c829-45b6-9ecc-a2c8962d7f21/_apis/Release/definitions/35",
  "_links": {
    "self": {
      "href": "https://vsrm.dev.azure.com/michalglowaczewski/e3ccb07b-c829-45b6-9ecc-a2c8962d7f21/_apis/Release/definitions/35"
    },
    "web": {
      "href": "https://dev.azure.com/michalglowaczewski/e3ccb07b-c829-45b6-9ecc-a2c8962d7f21/_release?definitionId=35"
    }
  }
}