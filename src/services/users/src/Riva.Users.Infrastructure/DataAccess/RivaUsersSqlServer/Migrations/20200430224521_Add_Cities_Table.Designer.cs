// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Riva.Users.Infrastructure.DataAccess.RivaUsersSqlServer.Contexts;

namespace Riva.Users.Infrastructure.DataAccess.RivaUsersSqlServer.Migrations
{
    [DbContext(typeof(RivaUsersDbContext))]
    [Migration("20200430224521_Add_Cities_Table")]
    partial class Add_Cities_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Riva.BuildingBlocks.Infrastructure.DataAccess.EntityFramework.Models.DomainEventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullyQualifiedEventTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DomainEvents");
                });

            modelBuilder.Entity("Riva.Users.Infrastructure.DataAccess.RivaUsersSqlServer.Entities.AnnouncementPreferenceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnnouncementPreferenceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PriceMax")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal?>("PriceMin")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int?>("RoomNumbersMax")
                        .HasColumnType("int");

                    b.Property<int?>("RoomNumbersMin")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AnnouncementPreferences");
                });

            modelBuilder.Entity("Riva.Users.Infrastructure.DataAccess.RivaUsersSqlServer.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d02ce58-3bfe-46bc-aa61-d2de1c1690c1")
                        });
                });

            modelBuilder.Entity("Riva.Users.Infrastructure.DataAccess.RivaUsersSqlServer.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnnouncementPreferenceLimit")
                        .HasColumnType("int");

                    b.Property<string>("AnnouncementSendingFrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("ServiceActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Riva.Users.Infrastructure.DataAccess.RivaUsersSqlServer.Entities.AnnouncementPreferenceEntity", b =>
                {
                    b.HasOne("Riva.Users.Infrastructure.DataAccess.RivaUsersSqlServer.Entities.UserEntity", "User")
                        .WithMany("AnnouncementPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
